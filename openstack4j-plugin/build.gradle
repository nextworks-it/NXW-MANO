/*
 * Copyright (c) 2015 Fraunhofer FOKUS
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.bmuschko:gradle-nexus-plugin:2.3.1'
    }
}
plugins {
    id 'net.researchgate.release' version '2.1.2'
    id "nebula.os-package" version "2.2.6"
    id 'com.github.sherter.google-java-format' version '0.5'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'jacoco'

apply from: 'gradle/gradle/nexus.upload.plugin.gradle'
apply from: 'gradle/gradle/command.line.helper.gradle'
apply from: 'gradle/gradle/git.helpers.gradle'

/**
 * Project settings
 */
project.ext {
    //------------------------------------------------//
    /**
     * Spring Related Variables
     */
    springVersion = '4.2.0.RELEASE'
    springBootVersion = '1.2.5.RELEASE'
    //------------------------------------------------//    
    //------------------------------------------------//
    /**
     * Application Related Version
     */
    applicationVersion = version

    applicationRelease = isApplicationRelease()
    applicationDate = new Date()
    applicationRevision = getRevision()

    applicationVersionSnapshot = (!applicationRelease) ? ".${asUTC(applicationDate, 'yyyyMMdd')}.git${applicationRevision}" : ""
    applicationVersionFull = "${applicationVersion}${applicationVersionSnapshot}"
    //------------------------------------------------//
    //------------------------------------------------//
    /**
     * gradle Related Vars
     */
    mainClass = 'org.openbaton.drivers.openstack4j.OpenStack4JDriver'
    //------------------------------------------------//
}

apply from: 'gradle/gradle/application.java.gradle'
apply from: 'gradle/gradle/run.application.java.gradle'
apply from: 'gradle/gradle/git.release.gradle'

repositories {
    mavenCentral()
    maven {
        //url "http://get.openbaton.org:8081/nexus/content/groups/public"
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}
dependencies {
    compile 'org.openbaton:catalogue:2.2.0'
    compile 'org.openbaton:monitoring:2.2.0'
    compile 'org.openbaton:vim-drivers:2.2.0'
    compile 'org.openbaton:exception:2.2.0'
    compile 'org.openbaton:plugin-sdk:2.2.0'

    compile group: 'org.pacesys', name: 'openstack4j', version: '3.0.3'


    // https://mvnrepository.com/artifact/commons-net/commons-net
    compile group: 'commons-net', name: 'commons-net', version: '3.5'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'org.slf4j:slf4j-simple:1.7.12'

    testCompile("org.mockito:mockito-all:1.10.19")
    testCompile("org.powermock:powermock-mockito-release-full:1.6.3")

    testCompile("junit:junit:4.12")
}

apply from: 'gradle/gradle/packaging.vimplugin.debian.gradle'
compileJava.dependsOn tasks.googleJavaFormat


