apply plugin: "application"

startScripts {
    doLast {
        def unixFile = file getUnixScript()

        def unixTextTmp = ""
        def unixText = unixFile.text
        def unixDaemonScript = new File("${rootProject.projectDir}/gradle/gradle/scripts/openbaton-nfvo.pscript").text

        unixText.readLines().each {
            line ->
                if (line.startsWith("exec")) {
                    unixTextTmp += unixDaemonScript;
                } else {
                    unixTextTmp += line + '\n'
                }
        }
        unixFile.text = unixTextTmp
        unixFile.renameTo("${startScripts.outputDir}/openbaton-nfvo")
    }
}

/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// to be executed just before the new release so that it gets the right version
task makeBrewFormula() {
    doLast{
        def brewFormula = new File("${rootProject.projectDir}/gradle/gradle/scripts/osx/openbaton-nfvo.rb")
        String brewFormulaText = brewFormula.text
        String brewFormulaTextNew = ""
        String currentBranch = version.toString().contains("-SNAPSHOT") ? "develop" : version;

        brewFormulaText.readLines().each {
            line ->
                if (line.trim().startsWith("version")) {
                    brewFormulaTextNew += "  version \"" + version + "\"" + '\n'
                } else if (line.trim().startsWith("url")) {
                    brewFormulaTextNew += "  url \"https://codeload.github.com/openbaton/NFVO/legacy.tar.gz/" + currentBranch + "\"" + '\n'
                } else {
                    brewFormulaTextNew += line + '\n'
                }
        }
        brewFormula.text = brewFormulaTextNew
    }
}
