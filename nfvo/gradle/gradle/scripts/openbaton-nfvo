#!/bin/sh

# Copyright (c) 2016 Open Baton (http://www.openbaton.org)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


##########################
#### General Settings ####
##########################

set -e
set -u
#set -x # only for DEBUG

# Make available the functions defined in /lib/lsb/init-functions
. /lib/lsb/init-functions


##########################
#### Global Variables ####
##########################

OPENBATON_COMPONENT_NAME_FANCY="NFV Orchestrator (NFVO)"
OPENBATON_COMPONENT_NAME=nfvo
OPENBATON_COMPONENT_RELATIVE_SUBPATH=nfvo

OPENBATON_COMPONENT_CONFIG_FILE=/etc/openbaton/openbaton-${OPENBATON_COMPONENT_NAME}.properties
OPENBATON_COMPONENT_JAR_FILE_NAME=openbaton-${OPENBATON_COMPONENT_NAME}
OPENBATON_COMPONENT_JAR_INSTALL_DIR=/usr/lib/openbaton/${OPENBATON_COMPONENT_RELATIVE_SUBPATH}

OPENBATON_COMPONENT_PID_FILE=/var/run/openbaton-${OPENBATON_COMPONENT_NAME}.pid
DAEMON_USER=root
OSTYPE=$(uname)



###################
#### RabbitMQ #####
###################

check_rabbitmq () {
	if [ "${OSTYPE}" = "Linux" ]; then
        instance=$(ps aux | grep -v grep | grep rabbitmq | grep server | wc -l) 
        if [ ${instance} -eq 0 ]; then
            log_warning_msg "rabbit is not running, let's try to start it"
			start_rabbitmq                        
        fi
    elif [ ${OSTYPE} = "Darwin" ]; then
        instance=$(ps aux | grep -v grep | grep rabbitmq | grep server | wc -l) 
        if [ ${instance} -eq 0 ]; then
            log_warning_msg "rabbitmq is not running, let's try to start it"
			start_rabbitmq                        
        fi
    fi    
}

start_rabbitmq () {
    $(rabbitmq-server -detached)
    if [ $? -ne 0 ]; then
        log_failure_msg "rabbitmq is not running properly (check the problem in /var/log/rabbitmq.log)"
        exit 1
    fi
}


####################
#### Open Baton ####
####################

check_already_running () {
	instance=$(ps aux | grep -v grep | grep "${OPENBATON_COMPONENT_JAR_FILE_NAME}" | grep "jar" | wc -l)
    if [ ${instance} -ne 0 ] ; then
        log_warning_msg "The OpenBaton ${OPENBATON_COMPONENT_NAME_FANCY} is already running"
        exit 1
    fi
}

set_jar_version () {
	openbaton_component_jar_file_name_versioned=$(ls -ct ${OPENBATON_COMPONENT_JAR_INSTALL_DIR} | grep "${OPENBATON_COMPONENT_JAR_FILE_NAME}" | grep "jar" | head -n 1)
	if [ "${openbaton_component_jar_file_name_versioned}" = "" ]; then
        log_failure_msg "The Open Baton ${OPENBATON_COMPONENT_NAME_FANCY} is not installed (jar-file not found)"
		exit 1
    fi
}

configure () {
    check_already_running
    check_rabbitmq
    set_jar_version
}

start () {
    configure
    log_success_msg "Starting the Open Baton ${OPENBATON_COMPONENT_NAME_FANCY} .."
    start-stop-daemon --start --background --pidfile ${OPENBATON_COMPONENT_PID_FILE} --make-pidfile --user ${DAEMON_USER} --chuid ${DAEMON_USER} --exec /usr/bin/java -- -jar ${OPENBATON_COMPONENT_JAR_INSTALL_DIR}/${openbaton_component_jar_file_name_versioned} --spring.config.location=file:${OPENBATON_COMPONENT_CONFIG_FILE}
}

stop () {
    log_success_msg "Stopping the Open Baton ${OPENBATON_COMPONENT_NAME_FANCY} .."
    start-stop-daemon --stop --pidfile ${OPENBATON_COMPONENT_PID_FILE}
}

restart () {
    stop
    start
}

usage () {
    echo "Open Baton ${OPENBATON_COMPONENT_NAME_FANCY}"
    echo "Usage:\n\t [openbaton-${OPENBATON_COMPONENT_NAME} start|stop|restart] | [service openbaton-${OPENBATON_COMPONENT_NAME} start|stop|restart] | [start|stop openbaton-${OPENBATON_COMPONENT_NAME}] | [systemctl start|stop openbaton-${OPENBATON_COMPONENT_NAME}.service]"
}


##
#   MAIN
##

if [ ${#} -eq 0 ]; then
    usage
    exit 1
fi

for cmd in ${@}
do
    case ${cmd} in
        "start" )
            start ;;
        "stop" )
            stop ;;
        "restart" )
            restart ;;
         *)   
	        usage;;
    esac
    if [ ${?} -ne 0 ]; then
	    exit 1
    fi
done
